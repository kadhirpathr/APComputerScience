Unit 1: Primitive Types
1. What is compound assignment operator?
    The compound-assignment operators combine the simple-assignment operator with another binary operator. 
    Compound-assignment operators perform the operation specified by the additional operator, then assign the result to the left operand.
2. System.out.println moves the cursor to a new line after the information has been displayed, while System.out.print does not.    
3. What are primitive and reference data types?
Variables in Java are classified into primitive and reference variables. 
From the programmer's perspective, a primitive variable's information is stored as the value of that variable,
whereas a reference variable holds a reference to information related to that variable.
4. What are the examples of primitive and reference data types in java?
5. When an integer variable is multiplied by a double variable what is the resulting type
6. What would happen when you devide an integer or double by zero
7. (=) operator can be used only to initialize value of variable, but not to change it later. - False
8. What is implicit conversion? 
9. Consider the following code segment.
System.out.print("Java is ");
System.out.println("fun ");
System.out.print("and cool!");
What is printed as a result of executing the code segment?
A. 
Java is fun and cool!
B.
Java isfun
and cool!
C.
Java is
fun
and cool! 
D.
Java is fun
and cool!

10. Assume you have some bills to pay. The individual bill amounts are 89.50, 14.75, 45.12, and 92.50. Add another print statement to sum and print the total bill amount on a separate line. Don’t just add the numbers in your head and print the result. You must write the code to add up the numbers and print the result.
public class CalculateBillTotal
{
   public static void main(String[] args)
   {
      System.out.println("Bill total:");

   }
}
11. A bus starts out with no passengers. Three people get on at the first stop. Five people get on at the second stop. One person gets off and eight people get on at the third stop. Three people get off at the fourth stop. How many people are left on the bus? Add another print statement to calculate and print the passengers remaining on the bus.
public class PassengersOnBus
{
   public static void main(String[] args)
   {
      System.out.print("Passengers remaining : ");

   }
}
12. Fix the code below.
public class Error1
{
   public static void main(String[] args)
   {
      System.out.println("Hi there!);
   }
}
13. Fix the code below
public class Error2
{
   public static void main(String[] args)
   {
      System.out.println("Hi there!";
   }
}
14. Fix the code below.
public class Error3
{
   public static void main(String[] args)
   {
      system.out.println("Hi there!")
   }
}
15. Match the following
single-line comment //
multi-line comment /* */
Java documentation comment - /** */
16. What type should you use to represent the average grade for a course?
Ans: B 
Comment: An average is calculated by summing all the values and dividing by the number of values. To keep the most amount of information this should be done with decimal numbers so use a double.
A. int
B. double
C. boolean
D. String

17. What type should you use to represent the number of people in a household?
Ans: A 
comment: The number of people is a whole number so using an integer make sense.
A. int
B. double
C. boolean
D. String
18. What type should you use to hold the first name of a person?
Ans: D
A. int
B. double
C. boolean
D. String
19. What type should you use to record if it is raining or not?
Ans: C 
A. int
B. double
C. boolean
D. String
20. What type should you use to represent the amount of money you have?
Ans: B
A. int
B. double
C. boolean
D. String
21. What type should you use for a shoe size like 8.5?
22. What type should you use for the number of tickets purchased?
23. Assume variable declaration double price = 9.50;. Which print statement will result in the output: Price is 9.50
Ans: C 
A. System.out.println("Price is + price");
B. System.out.println("Price is " price);
C. System.out.println("Price is " + price);
D. System.out.println(Price is + price);
E. System.out.println("Price is " + "price");
24. Match the following - variable naming conventions
snake case - variable_one
pascal case - VariableOne
camel case - variableOne
25. What is the camel case variable name for a variable that represents a shoe size?
shoeSize
26. What is the camel case variable name for a variable that represents the top score?
27. Assume you have a package with a given height 3 inches and width 5 inches. If the package is rotated 90 degrees, you should swap the values for the height and width. The code below makes an attempt to swap the values stored in two variables h and w, which represent height and width. Variable h should end up with w’s initial value of 5 and w should get h’s initial value of 3. Unfortunately this code has an error and does not work.
Explain in your own words why the ErrorSwap program code does not swap the values stored in h and w.

 public class ErrorSwap
 {
   public static void main(String[] args)
   {
     int h = 3;
     int w = 5;
     System.out.println(h);  //3
     System.out.println(w);  //5
     h = w;
     w = h;
     System.out.println(h);  //expected 5
     System.out.println(w);  //expected 3
   }
 }
 
28. Consider the following code segment. 
int a = 5;
int b = 2;
double c = 3.0;
System.out.println(5 + a / b * c - 1);
What is printed when the code segment is executed?
Ans: C 
A. 0.666666666666667
B. 9.0
C. 10.0
D. 11.5
E. 14.0
29.  Consider the following expression
(7 + 5 + 6 + 4) / 4
What is the value of the expression?
Ans: B
A. 5.5
B. 5
C. 6
D. 5.0
30.  Consider the following expression.
(7 + 5.0 + 6 + 4) / 4
What is the value of the expression?
Ans: A
A. 5.5
B. 5
C. 6
D. 5.0

31. Analyze the following code and choose correct option
Integer a = 1;
1. String b = (String)a;
2. String b = (String)(Object)a;
Ans: A
A. compile error in line 1 and runtime error in line 2
B. line 1 compiles, but compile error in line 2
C. line 2 compiles, but compile error in line 1
D. Both lines would compile and run without any issues



32.What is the result of 3 % 8?
3
33. Complete the program based on the process shown in the flowchart.
34. The Scanner class has several useful methods for reading user input. A token is a sequence of characters separated by white space.
Match the following methods of Scanner class with correct description
nextLine() - Scans all input up to the line break as a String
next() - Scans the next token of the input as a String
nextInt() - Scans the next token of the input as an int
nextDouble() - Scans the next token of the input as a double
nextBoolean() - Scans the next token of the input as a boolean
35. Match the following flow chart symbols to their meaning.
36. What are the values of x, y, and z after the following code executes?
int x = 0;
int y = 1;
int z = 2;
x--;
y++;
z+=y;
Ans: E 
A. x = -1, y = 1, z = 4
B. x = -1, y = 2, z = 3
C. x = -1, y = 2, z = 2
D. x = -1, y = 2, z = 2
E. x = -1, y = 2, z = 4
37. What are the values of x, y, and z after the following code executes?
int x = 3;
int y = 5;
int z = 2;
x = z * 2;
y /= 2;
z++;
Ans: E
A. x = 6, y = 2.5, z = 2
B. x = 4, y = 2.5, z = 2
C. x = 6, y = 2, z = 3
D. x = 4, y = 2.5, z = 3
E. x = 4, y = 2, z = 3

38. Match each single line of code on the left to the equivalent pair of lines on the right.
System.out.println(score++) => System.out.println(score);score++;
System.out.println(score--) => System.out.println(score);score--;
System.out.println(++score) => score++;System.out.println(score);
System.out.println(--score) => score--;System.out.println(score);
39. Java rounds up automatically when you do integer division. - false
    comment: Java throws away any values after the decimal point if you do integer division. It does not round up automatically.
40. casting always results in a double type. - false
    comment: Casting results in the type that you cast to. However, if you can't really cast the value to the specified type then you will get an error.
41. Which of the following returns the correct average for a total that is the sum of 3 int values?
Ans: C
A. (double) (total / 3); //This does integer division before casting the result to double so it loses the fractional part.
B. total / 3; //When you divide an integer by an integer you get an integer result and lose the fractional part.
C. (double) total / 3;
42. In the code below, declare and initialize 3 int variables that represent grades, and then sum and average them. Use casting to report the result as a double. For example, if the grades are 90, 100, and 94, the sum of the three numbers is 90 + 100 + 94 = 284, and the average is the sum 284 divided by 3 which casted to a double is 94.666667. You should use variables instead of the numeric literals in your formulas. Follow the pseudocode below.
public class Challenge1_6
{
   public static void main(String[] args)
   {
      // 1. Declare 3 int variables called grade1, grade2, grade3
      // and initialize them to 3 values


      // 2. Declare an int variable called sum for the sum of the grades

      // 3. Declare a double variable called average for the average of the grades

      // 4. Write a formula to calculate the sum of the 3 grades (add them up).

      // 5. Write a formula to calculate the average of the 3 grades from the sum using division and type casting.

      // 6. Print out the average


   }
}

43. Drag the definition from the left and drop it on the correct concept on the right. 
Specifying type and name for a variable => declaring a variable
A name associated with a memory location => variable
A type used to represent whole number => int
A type used to represent either true or false => boolean

44. Drag the definition from the left and drop it on the correct concept on the right.
Chaning the type of a variale => casting
A type used to represent decimal values => double
Setting value of a variable for first time => initialize
An operator that returns remainder => mod

45. Drag the definition from the left and drop it on the correct concept on the right.
1. Compiler - Software that translates the Java source code into the Java class file which can be run on the computer. [[1]]
2. Compiler or syntax error - An error that is found during the compilation. [[2]]
3. Main method - Where execution starts in a Java program. [[3]]
4. Variable - A name associated with a memory location in the computer. [[4]]
5. Declare a Variable - Specifying the type and name for a variable. This sets aside memory for a variable of that type and associates the name with that memory location. [[5]]
6. Initializing a Variable - The first time you set the value of a variable. [[6]]
7. data type - determines the size of memory reserved for a variable, for example int, double, boolean, String. [[7]]
8. integer - a whole number like 2 or -3 [[8]]
9. boolean - An expression that is either true or false. [[9]]
10. Camel case - One way to create a variable name by appending several words together and uppercasing the first letter of each word after the first word (myScore). [[10]]
11. Casting a Variable - Changing the type of a variable using (type) name. [[11]]
12. Operator - Common mathematical symbols such as + for addition and * for multiplication. [[12]]
13. Compound assignment or shortcut operators - Operators like x++ which means x = x + 1 or x *=y which means x = x * y. [[13]]
14. modulo - The % operator which returns the remainder from one number divide by another. [[14]]
15. arithmetic expression - a sequence of operands and operators that describe a calculation to be performed, for example 3*(2 + x) [[15]]
16. operator precedence - some operators are done before others, for example *, /, % have precedence over + and -, unless parentheses are used. [[16]]

46. The following code should print “Gabby’s favorite sport is soccer”. However, the code has errors. Fix the code so that it compiles and runs correctly.
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Gabby";
        String sport  "soccer;
        System.out.println(Name +
                           "'s favorite sport is " 
                           sport)
    }
}
Ans:
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Gabby";
        String sport = "soccer";
        System.out.println(Name +
                           "\'s favorite sport is " +
                           sport);
    }
}
47. The following code should calculate the cost of a trip that is 300 miles if gas is $2.50 a gallon and your car gets 36 miles per gallon. However, the code has syntax errors, like missing semicolons, wrong case on names, or unmatched " or (. Fix the code so that it compiles and runs correctly.
public class Test1
{
    public static void main(String[] args)
    {
        int tripMiles = 300
        Double price = 2.50;
        int milesPerGallon = 30;
        double numberOfGallons = tripmiles / milesPerGallon;
        double totalCost = numberOfGallons * price;
        System.out.println(totalCost);
    }
}

Ans: 
public class Test1
{
    public static void main(String[] args)
    {
        int tripMiles = 300;
        double price = 2.50;
        int milesPerGallon = 30;
        double numberOfGallons = tripMiles / milesPerGallon;
        double totalCost = numberOfGallons * price;
        System.out.println(totalCost);
    }
}
48. What does the following code print? - 0
System.out.println(1 / 3);
49. What does the following code print?
System.out.println(2 + 3 * 5 - 1);
Ans: D 
A. 24
B. 14
C. This will give a compile time error.
D. 16
50. What does the following code do when it is executed?
System.out.println(5 / 0);
Ans: B
A. It will print 0
B. It will give a run-time error
C. It will give a compile-time error (won't compile)
D. It will print 5